<!-- STELLA AI Status Bar -->
<div class="fixed top-0 w-full bg-gray-800/95 border-b border-blue-500/20 z-50">
    <div class="container mx-auto px-4 py-2 flex items-center justify-between">
      <div id="ai-status" class="flex items-center space-x-3">
        <div class="pulse-dot w-3 h-3 bg-blue-500 rounded-full animate-ping"></div>
        <span id="stella-status-message">STELLA: <span class="text-blue-400">Monitoring training performance...</span></span>
      </div>
      <div class="flex items-center space-x-6">
        <div id="session-metrics" class="flex items-center space-x-6">
          <div class="flex items-center space-x-2">
            <span class="text-blue-400">Focus:</span>
            <span id="focus-score">--</span>
          </div>
          <div class="flex items-center space-x-2">
            <span class="text-green-400">Progress:</span>
            <span id="progress-percentage">0%</span>
          </div>
          <div class="flex items-center space-x-2">
            <span class="text-purple-400">Session:</span>
            <span id="session-timer">00:00:00</span>
          </div>
        </div>
        <div class="hidden md:flex items-center space-x-2">
          <button id="ai-help-button" class="px-3 py-1 bg-blue-600 text-sm rounded-full hover:bg-blue-500 transition-colors">
            Ask STELLA
          </button>
          <button id="pause-session" class="px-3 py-1 bg-gray-700 text-sm rounded-full hover:bg-gray-600 transition-colors">
            Pause
          </button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- STELLA AI Help Modal (hidden by default) -->
  <div id="stella-help-modal" class="fixed inset-0 bg-black/80 z-50 hidden flex items-center justify-center">
    <div class="bg-gray-800 rounded-xl p-6 max-w-md w-full mx-4">
      <div class="flex justify-between items-center mb-4">
        <h3 class="text-xl font-bold">Ask STELLA</h3>
        <button id="close-stella-modal" class="text-gray-400 hover:text-white">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="stella-conversation mb-4 max-h-60 overflow-y-auto">
        <!-- STELLA conversation will appear here -->
      </div>
      <div class="flex">
        <input type="text" id="stella-question" class="flex-grow bg-gray-700 rounded-l-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="How can I improve my form?">
        <button id="send-to-stella" class="bg-blue-600 text-white px-4 py-2 rounded-r-lg hover:bg-blue-500">
          Send
        </button>
      </div>
    </div>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Session timer
      const startTime = new Date();
      const timerElement = document.getElementById('session-timer');
      
      setInterval(() => {
        const now = new Date();
        const diff = Math.floor((now - startTime) / 1000);
        const hours = Math.floor(diff / 3600).toString().padStart(2, '0');
        const minutes = Math.floor((diff % 3600) / 60).toString().padStart(2, '0');
        const seconds = Math.floor(diff % 60).toString().padStart(2, '0');
        timerElement.textContent = `${hours}:${minutes}:${seconds}`;
      }, 1000);
      
      // STELLA help modal
      const helpButton = document.getElementById('ai-help-button');
      const helpModal = document.getElementById('stella-help-modal');
      const closeModal = document.getElementById('close-stella-modal');
      const stellaQuestion = document.getElementById('stella-question');
      const sendToStella = document.getElementById('send-to-stella');
      
      helpButton.addEventListener('click', () => {
        helpModal.classList.remove('hidden');
      });
      
      closeModal.addEventListener('click', () => {
        helpModal.classList.add('hidden');
      });
      
      sendToStella.addEventListener('click', () => {
        sendQuestionToStella();
      });
      
      stellaQuestion.addEventListener('keydown', (e) => {
        if (e.key === 'Enter') {
          sendQuestionToStella();
        }
      });
      
      function sendQuestionToStella() {
        const question = stellaQuestion.value.trim();
        if (!question) return;
        
        const conversationDiv = document.querySelector('.stella-conversation');
        
        // Add user question
        conversationDiv.innerHTML += `
          <div class="mb-2 text-right">
            <div class="inline-block bg-blue-600 px-3 py-2 rounded-lg max-w-xs">
              ${question}
            </div>
          </div>
        `;
        
        // Clear input
        stellaQuestion.value = '';
        
        // Scroll to bottom
        conversationDiv.scrollTop = conversationDiv.scrollHeight;
        
        // Simulate STELLA thinking
        setTimeout(() => {
          // In a real app, you'd call your STELLA AI service here
          // For now, we'll simulate a response
          const stellaResponse = getSTELLAResponse(question);
          
          conversationDiv.innerHTML += `
            <div class="mb-2">
              <div class="inline-block bg-gray-700 px-3 py-2 rounded-lg max-w-xs">
                ${stellaResponse}
              </div>
            </div>
          `;
          
          // Scroll to bottom
          conversationDiv.scrollTop = conversationDiv.scrollHeight;
        }, 1000);
      }
      
      function getSTELLAResponse(question) {
        // This would be replaced with real AI calls
        const responses = [
          "Focus on keeping your core engaged during this exercise.",
          "Your form is looking good, but try to maintain a steady breathing pattern.",
          "I've noticed your right side is slightly stronger. Let's work on balancing that out.",
          "Based on your heart rate, I recommend a short recovery period before continuing.",
          "You're making excellent progress! Your technique has improved 23% since last session."
        ];
        
        return responses[Math.floor(Math.random() * responses.length)];
      }
    });
  </script>