<%- include('../partials/head', { title: title }) %>
<%- include('../partials/header') %>

<div class="min-h-screen bg-gray-900 text-white">
  <!-- STELLA AI Status Bar -->
  <%- include('./components/stella-status-bar') %>
  
  <main class="container mx-auto px-4 py-8">
    <!-- Phase Navigation -->
    <%- include('./components/phase-nav', { currentPhase: content.currentPhase }) %>
    
    <!-- Dynamic Content Area -->
    <div class="grid md:grid-cols-3 gap-8">
      <!-- Main Content (2 columns) -->
      <div class="md:col-span-2 space-y-8">
        <div class="bg-gray-800 rounded-xl p-6">
          <h1 class="text-4xl font-bold mb-4"><%= content.title %></h1>
          <p class="mb-6 text-gray-400"><%= content.description %></p>
          
          <!-- Objectives -->
          <div class="mb-6">
            <h2 class="text-2xl font-semibold mb-4">Objectives:</h2>
            <ul class="space-y-2">
              <% content.objectives.forEach(function(obj) { %>
                <li class="flex items-center gap-2">
                  <span class="text-green-400">âœ“</span> <%= obj %>
                </li>
              <% }); %>
            </ul>
          </div>
          
          <!-- Interactive Training Area -->
          <div id="module-interactive" class="bg-gray-700/50 rounded-lg p-6">
            <div class="flex items-center gap-3 mb-4">
              <div class="w-8 h-8 rounded-full bg-blue-500/20 flex items-center justify-center">
                ðŸŽ¯
              </div>
              <h3 class="text-xl font-semibold">Training Interface</h3>
            </div>
            
            <!-- Dynamic module content loaded here -->
            <div id="content-container">
              <% if (typeof moduleContent !== 'undefined') { %>
                <%- moduleContent %>
              <% } else { %>
                <div class="text-center py-8">
                  <div class="spinner mb-4"></div>
                  <p>Loading training content...</p>
                </div>
              <% } %>
            </div>
          </div>
          
          <!-- Certification Progress -->
          <% if (content.certification) { %>
            <div class="mt-8 p-4 border border-blue-500/30 rounded-lg bg-blue-900/20">
              <h3 class="text-xl font-semibold mb-2">Certification Progress</h3>
              <div class="flex items-center gap-4">
                <div class="progress-bar w-full bg-gray-700 rounded-full h-4">
                  <div class="bg-blue-500 h-4 rounded-full" style="width: <%= content.certProgress %>%"></div>
                </div>
                <span class="text-blue-300"><%= content.certProgress %>%</span>
              </div>
              <p class="mt-2 text-sm text-gray-400">
                <%= content.certDescription %>
              </p>
            </div>
          <% } %>
        </div>
      </div>
      
      <!-- STELLA Sidebar -->
      <div class="space-y-8">
        <%- include('./components/progress-tracker', { 
          progress: content.progress || 0,
          modules: content.modules || []
        }) %>
        
        <!-- STELLA's Real-time Feedback -->
        <%- include('./components/stella-interface', {
          moduleId: content.moduleId,
          feedbackHistory: content.feedbackHistory || []
        }) %>
      </div>
    </div>
  </main>
</div>

<!-- Training Scripts -->
<script>
  // Initialize STELLA for this module
  const moduleId = '<%= content.moduleId %>';
  const moduleType = '<%= content.moduleType %>';
  const phase = <%= content.currentPhase %>;
  
  // Connect to STELLA
 src="/js/services/stella-integration.js"
 src="/js/modules/training/index.js"

  
  // Initialize components
  document.addEventListener('DOMContentLoaded', async () => {
    try {
      // Initialize STELLA
      const stella = new STELLAInterface();
      await stella.initialize(moduleId, moduleType, phase);
      
      // Load module-specific training
      const trainingModule = new TrainingModule(moduleId, stella);
      await trainingModule.initialize();
      
      // Set up real-time feedback
      stella.on('feedback', (feedback) => {
        document.getElementById('stella-feedback').innerHTML += `
          <div class="feedback-message bg-blue-900/30 p-3 rounded-lg">
            <p>${feedback.message}</p>
          </div>
        `;
      });
      
      // Track progress
      stella.on('progress-update', (data) => {
        // Update UI with progress
        document.querySelector('.progress-circle').dataset.progress = data.progress;
        document.querySelector('.progress-circle span').textContent = `${data.progress}%`;
      });
    } catch (error) {
      console.error('Error initializing training:', error);
      document.getElementById('module-interactive').innerHTML = `
        <div class="text-center py-8 text-red-400">
          <p>Error loading training module. Please try again.</p>
        </div>
      `;
    }
  });
</script>

<%- include('../partials/footer') %>